Terminals unused in grammar

    tERROR


Grammar

    0 $accept: Programme $end

    1 Programme: Fonc Programme
    2          | Fonc

    3 Param: tINT tID
    4      | tINT tID tCOMMA Param

    5 Params: ε
    6       | tVOID
    7       | Param

    8 Arg: Expr
    9    | Arg tCOMMA Arg

   10 Args: ε
   11     | Arg

   12 Instruction: Affectation
   13            | Declaration
   14            | While
   15            | If
   16            | Print

   17 Affectation: tID tASSIGN Expr tSEMI

   18 $@1: ε

   19 Declaration: tINT tID tASSIGN $@1 Expr tSEMI
   20            | tINT tID MultiDeclaration tSEMI

   21 MultiDeclaration: ε
   22                 | tCOMMA tID MultiDeclaration

   23 $@2: ε

   24 MultiDeclaration: tCOMMA tID tASSIGN $@2 Expr MultiDeclaration

   25 Print: tPRINT tLPAR tID tRPAR tSEMI

   26 Cond: Expr
   27     | Expr tLT Expr
   28     | Expr tGT Expr
   29     | Expr tNE Expr
   30     | Expr tEQ Expr
   31     | Expr tGE Expr
   32     | Expr tLE Expr
   33     | Expr tAND Expr
   34     | Expr tOR Expr
   35     | tNOT Expr

   36 @3: ε

   37 @4: ε

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

   39 @5: ε

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE IncrDepth Body tRBRACE DecrDepth

   41 If: DebutIf

   42 @6: ε

   43 If: DebutIf tELSE @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

   44 PopStack: ε

   45 IncrDepth: ε

   46 DecrDepth: ε

   47 Expr: tID
   48     | tNB
   49     | tSUB tNB

   50 $@7: ε

   51 Expr: tID tLPAR $@7 Args tRPAR
   52     | Expr tMUL Expr
   53     | Expr tDIV Expr
   54     | Expr tADD Expr
   55     | Expr tSUB Expr

   56 Body: ε
   57     | Instruction Body

   58 $@8: ε

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

   60 $@9: ε

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

   62 Return: tRETURN Expr tSEMI

   63 PushAdr: ε

   64 PushVal: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tVOID (258) 6 61
    tINT (259) 3 4 19 20 59
    tELSE (260) 43
    tWHILE (261) 38
    tPRINT (262) 25
    tRETURN (263) 62
    tADD (264) 54
    tSUB (265) 49 55
    tMUL (266) 52
    tDIV (267) 53
    tLT (268) 27
    tGT (269) 28
    tNE (270) 29
    tEQ (271) 30
    tGE (272) 31
    tLE (273) 32
    tASSIGN (274) 17 19 24
    tAND (275) 33
    tOR (276) 34
    tNOT (277) 35
    tSEMI (278) 17 19 20 25 62
    tCOMMA (279) 4 9 22 24
    tLPAR (280) 25 38 40 51 59 61
    tRPAR (281) 25 38 40 51 59 61
    tLBRACE (282) 38 40 43 59 61
    tRBRACE (283) 38 40 43 59 61
    tERROR (284)
    tID <s> (285) 3 4 17 19 20 22 24 25 47 51 59 61
    tNB <nb> (286) 48 49
    tIF <nb> (287) 40


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Programme (34)
        on left: 1 2
        on right: 0 1
    Param (35)
        on left: 3 4
        on right: 4 7
    Params (36)
        on left: 5 6 7
        on right: 59 61
    Arg (37)
        on left: 8 9
        on right: 9 11
    Args (38)
        on left: 10 11
        on right: 51
    Instruction (39)
        on left: 12 13 14 15 16
        on right: 57
    Affectation (40)
        on left: 17
        on right: 12
    Declaration (41)
        on left: 19 20
        on right: 13
    $@1 (42)
        on left: 18
        on right: 19
    MultiDeclaration (43)
        on left: 21 22 24
        on right: 20 22 24
    $@2 (44)
        on left: 23
        on right: 24
    Print (45)
        on left: 25
        on right: 16
    Cond <nb> (46)
        on left: 26 27 28 29 30 31 32 33 34 35
        on right: 38 40
    While <nb> (47)
        on left: 38
        on right: 14
    @3 (48)
        on left: 36
        on right: 38
    @4 (49)
        on left: 37
        on right: 38
    DebutIf <nb> (50)
        on left: 40
        on right: 41 43
    @5 (51)
        on left: 39
        on right: 40
    If (52)
        on left: 41 43
        on right: 15
    @6 (53)
        on left: 42
        on right: 43
    PopStack (54)
        on left: 44
        on right: 38
    IncrDepth (55)
        on left: 45
        on right: 38 40 43 59 61
    DecrDepth (56)
        on left: 46
        on right: 38 40 43 59 61
    Expr <nb> (57)
        on left: 47 48 49 51 52 53 54 55
        on right: 8 17 19 24 26 27 28 29 30 31 32 33 34 35 52 53 54 55 62
    $@7 (58)
        on left: 50
        on right: 51
    Body (59)
        on left: 56 57
        on right: 38 40 43 57 59 61
    Fonc (60)
        on left: 59 61
        on right: 1 2
    $@8 (61)
        on left: 58
        on right: 59
    $@9 (62)
        on left: 60
        on right: 61
    Return (63)
        on left: 62
        on right: 59
    PushAdr (64)
        on left: 63
        on right: 59 61
    PushVal (65)
        on left: 64
        on right: 59


State 0

    0 $accept: • Programme $end

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    Programme  go to state 3
    Fonc       go to state 4


State 1

   61 Fonc: tVOID • tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tID  shift, and go to state 5


State 2

   59 Fonc: tINT • tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tID  shift, and go to state 6


State 3

    0 $accept: Programme • $end

    $end  shift, and go to state 7


State 4

    1 Programme: Fonc • Programme
    2          | Fonc •

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    $default  reduce using rule 2 (Programme)

    Programme  go to state 8
    Fonc       go to state 4


State 5

   61 Fonc: tVOID tID • $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 60 ($@9)

    $@9  go to state 9


State 6

   59 Fonc: tINT tID • $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 58 ($@8)

    $@8  go to state 10


State 7

    0 $accept: Programme $end •

    $default  accept


State 8

    1 Programme: Fonc Programme •

    $default  reduce using rule 1 (Programme)


State 9

   61 Fonc: tVOID tID $@9 • IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 11


State 10

   59 Fonc: tINT tID $@8 • IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 12


State 11

   61 Fonc: tVOID tID $@9 IncrDepth • PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 63 (PushAdr)

    PushAdr  go to state 13


State 12

   59 Fonc: tINT tID $@8 IncrDepth • PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 63 (PushAdr)

    PushAdr  go to state 14


State 13

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr • tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tLPAR  shift, and go to state 15


State 14

   59 Fonc: tINT tID $@8 IncrDepth PushAdr • PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 64 (PushVal)

    PushVal  go to state 16


State 15

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR • Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tVOID  shift, and go to state 17
    tINT   shift, and go to state 18

    $default  reduce using rule 5 (Params)

    Param   go to state 19
    Params  go to state 20


State 16

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal • tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tLPAR  shift, and go to state 21


State 17

    6 Params: tVOID •

    $default  reduce using rule 6 (Params)


State 18

    3 Param: tINT • tID
    4      | tINT • tID tCOMMA Param

    tID  shift, and go to state 22


State 19

    7 Params: Param •

    $default  reduce using rule 7 (Params)


State 20

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params • tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tRPAR  shift, and go to state 23


State 21

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR • Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tVOID  shift, and go to state 17
    tINT   shift, and go to state 18

    $default  reduce using rule 5 (Params)

    Param   go to state 19
    Params  go to state 24


State 22

    3 Param: tINT tID •
    4      | tINT tID • tCOMMA Param

    tCOMMA  shift, and go to state 25

    $default  reduce using rule 3 (Param)


State 23

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR • tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tLBRACE  shift, and go to state 26


State 24

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params • tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tRPAR  shift, and go to state 27


State 25

    4 Param: tINT tID tCOMMA • Param

    tINT  shift, and go to state 18

    Param  go to state 28


State 26

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE • IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 29


State 27

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR • tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tLBRACE  shift, and go to state 30


State 28

    4 Param: tINT tID tCOMMA Param •

    $default  reduce using rule 4 (Param)


State 29

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth • Body DecrDepth tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 43


State 30

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE • IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 44


State 31

   19 Declaration: tINT • tID tASSIGN $@1 Expr tSEMI
   20            | tINT • tID MultiDeclaration tSEMI

    tID  shift, and go to state 45


State 32

   38 While: tWHILE • tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    tLPAR  shift, and go to state 46


State 33

   25 Print: tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 47


State 34

   17 Affectation: tID • tASSIGN Expr tSEMI

    tASSIGN  shift, and go to state 48


State 35

   40 DebutIf: tIF • tLPAR Cond tRPAR @5 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLPAR  shift, and go to state 49


State 36

   57 Body: Instruction • Body

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 50


State 37

   12 Instruction: Affectation •

    $default  reduce using rule 12 (Instruction)


State 38

   13 Instruction: Declaration •

    $default  reduce using rule 13 (Instruction)


State 39

   16 Instruction: Print •

    $default  reduce using rule 16 (Instruction)


State 40

   14 Instruction: While •

    $default  reduce using rule 14 (Instruction)


State 41

   41 If: DebutIf •
   43   | DebutIf • tELSE @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tELSE  shift, and go to state 51

    $default  reduce using rule 41 (If)


State 42

   15 Instruction: If •

    $default  reduce using rule 15 (Instruction)


State 43

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body • DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 52


State 44

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth • Body Return DecrDepth tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 53


State 45

   19 Declaration: tINT tID • tASSIGN $@1 Expr tSEMI
   20            | tINT tID • MultiDeclaration tSEMI

    tASSIGN  shift, and go to state 54
    tCOMMA   shift, and go to state 55

    $default  reduce using rule 21 (MultiDeclaration)

    MultiDeclaration  go to state 56


State 46

   38 While: tWHILE tLPAR • @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 36 (@3)

    @3  go to state 57


State 47

   25 Print: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 58


State 48

   17 Affectation: tID tASSIGN • Expr tSEMI

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 62


State 49

   40 DebutIf: tIF tLPAR • Cond tRPAR @5 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tSUB  shift, and go to state 59
    tNOT  shift, and go to state 63
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Cond  go to state 64
    Expr  go to state 65


State 50

   57 Body: Instruction Body •

    $default  reduce using rule 57 (Body)


State 51

   43 If: DebutIf tELSE • @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 42 (@6)

    @6  go to state 66


State 52

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 67


State 53

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body • Return DecrDepth tRBRACE DecrDepth

    tRETURN  shift, and go to state 68

    Return  go to state 69


State 54

   19 Declaration: tINT tID tASSIGN • $@1 Expr tSEMI

    $default  reduce using rule 18 ($@1)

    $@1  go to state 70


State 55

   22 MultiDeclaration: tCOMMA • tID MultiDeclaration
   24                 | tCOMMA • tID tASSIGN $@2 Expr MultiDeclaration

    tID  shift, and go to state 71


State 56

   20 Declaration: tINT tID MultiDeclaration • tSEMI

    tSEMI  shift, and go to state 72


State 57

   38 While: tWHILE tLPAR @3 • Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    tSUB  shift, and go to state 59
    tNOT  shift, and go to state 63
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Cond  go to state 73
    Expr  go to state 65


State 58

   25 Print: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 74


State 59

   49 Expr: tSUB • tNB

    tNB  shift, and go to state 75


State 60

   47 Expr: tID •
   51     | tID • tLPAR $@7 Args tRPAR

    tLPAR  shift, and go to state 76

    $default  reduce using rule 47 (Expr)


State 61

   48 Expr: tNB •

    $default  reduce using rule 48 (Expr)


State 62

   17 Affectation: tID tASSIGN Expr • tSEMI
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tSEMI  shift, and go to state 81


State 63

   35 Cond: tNOT • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 82


State 64

   40 DebutIf: tIF tLPAR Cond • tRPAR @5 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tRPAR  shift, and go to state 83


State 65

   26 Cond: Expr •
   27     | Expr • tLT Expr
   28     | Expr • tGT Expr
   29     | Expr • tNE Expr
   30     | Expr • tEQ Expr
   31     | Expr • tGE Expr
   32     | Expr • tLE Expr
   33     | Expr • tAND Expr
   34     | Expr • tOR Expr
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80
    tLT   shift, and go to state 84
    tGT   shift, and go to state 85
    tNE   shift, and go to state 86
    tEQ   shift, and go to state 87
    tGE   shift, and go to state 88
    tLE   shift, and go to state 89
    tAND  shift, and go to state 90
    tOR   shift, and go to state 91

    $default  reduce using rule 26 (Cond)


State 66

   43 If: DebutIf tELSE @6 • tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 92


State 67

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE • DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 93


State 68

   62 Return: tRETURN • Expr tSEMI

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 94


State 69

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return • DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 95


State 70

   19 Declaration: tINT tID tASSIGN $@1 • Expr tSEMI

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 96


State 71

   22 MultiDeclaration: tCOMMA tID • MultiDeclaration
   24                 | tCOMMA tID • tASSIGN $@2 Expr MultiDeclaration

    tASSIGN  shift, and go to state 97
    tCOMMA   shift, and go to state 55

    $default  reduce using rule 21 (MultiDeclaration)

    MultiDeclaration  go to state 98


State 72

   20 Declaration: tINT tID MultiDeclaration tSEMI •

    $default  reduce using rule 20 (Declaration)


State 73

   38 While: tWHILE tLPAR @3 Cond • tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    tRPAR  shift, and go to state 99


State 74

   25 Print: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 100


State 75

   49 Expr: tSUB tNB •

    $default  reduce using rule 49 (Expr)


State 76

   51 Expr: tID tLPAR • $@7 Args tRPAR

    $default  reduce using rule 50 ($@7)

    $@7  go to state 101


State 77

   54 Expr: Expr tADD • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 102


State 78

   55 Expr: Expr tSUB • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 103


State 79

   52 Expr: Expr tMUL • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 104


State 80

   53 Expr: Expr tDIV • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 105


State 81

   17 Affectation: tID tASSIGN Expr tSEMI •

    $default  reduce using rule 17 (Affectation)


State 82

   35 Cond: tNOT Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 35 (Cond)


State 83

   40 DebutIf: tIF tLPAR Cond tRPAR • @5 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 39 (@5)

    @5  go to state 106


State 84

   27 Cond: Expr tLT • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 107


State 85

   28 Cond: Expr tGT • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 108


State 86

   29 Cond: Expr tNE • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 109


State 87

   30 Cond: Expr tEQ • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 110


State 88

   31 Cond: Expr tGE • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 111


State 89

   32 Cond: Expr tLE • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 112


State 90

   33 Cond: Expr tAND • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 113


State 91

   34 Cond: Expr tOR • Expr

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 114


State 92

   43 If: DebutIf tELSE @6 tLBRACE • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 115


State 93

   61 Fonc: tVOID tID $@9 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth •

    $default  reduce using rule 61 (Fonc)


State 94

   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr
   62 Return: tRETURN Expr • tSEMI

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tSEMI  shift, and go to state 116


State 95

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 117


State 96

   19 Declaration: tINT tID tASSIGN $@1 Expr • tSEMI
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tSEMI  shift, and go to state 118


State 97

   24 MultiDeclaration: tCOMMA tID tASSIGN • $@2 Expr MultiDeclaration

    $default  reduce using rule 23 ($@2)

    $@2  go to state 119


State 98

   22 MultiDeclaration: tCOMMA tID MultiDeclaration •

    $default  reduce using rule 22 (MultiDeclaration)


State 99

   38 While: tWHILE tLPAR @3 Cond tRPAR • @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 37 (@4)

    @4  go to state 120


State 100

   25 Print: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 25 (Print)


State 101

   51 Expr: tID tLPAR $@7 • Args tRPAR

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    $default  reduce using rule 10 (Args)

    Arg   go to state 121
    Args  go to state 122
    Expr  go to state 123


State 102

   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   54     | Expr tADD Expr •
   55     | Expr • tSUB Expr

    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 54 (Expr)


State 103

   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr
   55     | Expr tSUB Expr •

    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 55 (Expr)


State 104

   52 Expr: Expr • tMUL Expr
   52     | Expr tMUL Expr •
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    $default  reduce using rule 52 (Expr)


State 105

   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   53     | Expr tDIV Expr •
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    $default  reduce using rule 53 (Expr)


State 106

   40 DebutIf: tIF tLPAR Cond tRPAR @5 • tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 124


State 107

   27 Cond: Expr tLT Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 27 (Cond)


State 108

   28 Cond: Expr tGT Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 28 (Cond)


State 109

   29 Cond: Expr tNE Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 29 (Cond)


State 110

   30 Cond: Expr tEQ Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 30 (Cond)


State 111

   31 Cond: Expr tGE Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 31 (Cond)


State 112

   32 Cond: Expr tLE Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 32 (Cond)


State 113

   33 Cond: Expr tAND Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 33 (Cond)


State 114

   34 Cond: Expr tOR Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 34 (Cond)


State 115

   43 If: DebutIf tELSE @6 tLBRACE IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 125


State 116

   62 Return: tRETURN Expr tSEMI •

    $default  reduce using rule 62 (Return)


State 117

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE • DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 126


State 118

   19 Declaration: tINT tID tASSIGN $@1 Expr tSEMI •

    $default  reduce using rule 19 (Declaration)


State 119

   24 MultiDeclaration: tCOMMA tID tASSIGN $@2 • Expr MultiDeclaration

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Expr  go to state 127


State 120

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 • tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 128


State 121

    9 Arg: Arg • tCOMMA Arg
   11 Args: Arg •

    tCOMMA  shift, and go to state 129

    $default  reduce using rule 11 (Args)


State 122

   51 Expr: tID tLPAR $@7 Args • tRPAR

    tRPAR  shift, and go to state 130


State 123

    8 Arg: Expr •
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 8 (Arg)


State 124

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 131


State 125

   43 If: DebutIf tELSE @6 tLBRACE IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 132


State 126

   59 Fonc: tINT tID $@8 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth •

    $default  reduce using rule 59 (Fonc)


State 127

   24 MultiDeclaration: tCOMMA tID tASSIGN $@2 Expr • MultiDeclaration
   52 Expr: Expr • tMUL Expr
   53     | Expr • tDIV Expr
   54     | Expr • tADD Expr
   55     | Expr • tSUB Expr

    tADD    shift, and go to state 77
    tSUB    shift, and go to state 78
    tMUL    shift, and go to state 79
    tDIV    shift, and go to state 80
    tCOMMA  shift, and go to state 55

    $default  reduce using rule 21 (MultiDeclaration)

    MultiDeclaration  go to state 133


State 128

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE • PopStack IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 44 (PopStack)

    PopStack  go to state 134


State 129

    9 Arg: Arg tCOMMA • Arg

    tSUB  shift, and go to state 59
    tID   shift, and go to state 60
    tNB   shift, and go to state 61

    Arg   go to state 135
    Expr  go to state 123


State 130

   51 Expr: tID tLPAR $@7 Args tRPAR •

    $default  reduce using rule 51 (Expr)


State 131

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 136


State 132

   43 If: DebutIf tELSE @6 tLBRACE IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 137


State 133

   24 MultiDeclaration: tCOMMA tID tASSIGN $@2 Expr MultiDeclaration •

    $default  reduce using rule 24 (MultiDeclaration)


State 134

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 45 (IncrDepth)

    IncrDepth  go to state 138


State 135

    9 Arg: Arg • tCOMMA Arg
    9    | Arg tCOMMA Arg •

    $default  reduce using rule 9 (Arg)


State 136

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 139


State 137

   43 If: DebutIf tELSE @6 tLBRACE IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 43 (If)


State 138

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 56 (Body)

    Instruction  go to state 36
    Affectation  go to state 37
    Declaration  go to state 38
    Print        go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Body         go to state 140


State 139

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 141


State 140

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 142


State 141

   40 DebutIf: tIF tLPAR Cond tRPAR @5 tLBRACE IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 40 (DebutIf)


State 142

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 46 (DecrDepth)

    DecrDepth  go to state 143


State 143

   38 While: tWHILE tLPAR @3 Cond tRPAR @4 tLBRACE PopStack IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 38 (While)
