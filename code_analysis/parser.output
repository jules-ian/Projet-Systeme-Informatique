Nonterminals useless in grammar

    Arg
    Args
    PopStack


Terminals unused in grammar

    tERROR


Rules useless in grammar

   57 Arg: Expr
   58    | Arg tCOMMA Arg

   59 Args: ε
   60     | Arg

   61 PopStack: ε


Grammar

    0 $accept: Programme $end

    1 Programme: Fonc Programme
    2          | Fonc

    3 $@1: ε

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    5 $@2: ε

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    7 PushAdr: ε

    8 PushVal: ε

    9 IncrDepth: ε

   10 DecrDepth: ε

   11 Params: ε
   12       | tVOID
   13       | Param

   14 Param: tINT tID
   15      | tINT tID tCOMMA Param

   16 Body: ε
   17     | Instruction Body

   18 Instruction: Affectation
   19            | Declaration
   20            | While
   21            | If
   22            | Print

   23 Affectation: tID tASSIGN Expr tSEMI

   24 Expr: tID
   25     | tNB
   26     | Expr tMUL Expr
   27     | Expr tDIV Expr
   28     | Expr tADD Expr
   29     | Expr tSUB Expr

   30 $@3: ε

   31 Declaration: tINT tID tASSIGN $@3 Expr tSEMI
   32            | tINT tID MultiDeclaration tSEMI

   33 MultiDeclaration: ε
   34                 | tCOMMA tID MultiDeclaration

   35 $@4: ε

   36 MultiDeclaration: tCOMMA tID tASSIGN $@4 Expr MultiDeclaration

   37 @5: ε

   38 @6: ε

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

   40 @7: ε

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE IncrDepth Body tRBRACE DecrDepth

   42 If: DebutIf

   43 @8: ε

   44 If: DebutIf tELSE @8 tLBRACE IncrDepth Body tRBRACE DecrDepth

   45 Cond: Expr
   46     | Expr tLT Expr
   47     | Expr tGT Expr
   48     | Expr tNE Expr
   49     | Expr tEQ Expr
   50     | Expr tGE Expr
   51     | Expr tLE Expr
   52     | Expr tAND Expr
   53     | Expr tOR Expr
   54     | tNOT Expr

   55 Print: tPRINT tLPAR tID tRPAR tSEMI

   56 Return: tRETURN Expr tSEMI


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tVOID (258) 6 12
    tINT (259) 4 14 15 31 32
    tELSE (260) 44
    tWHILE (261) 39
    tPRINT (262) 55
    tRETURN (263) 56
    tADD (264) 28
    tSUB (265) 29
    tMUL (266) 26
    tDIV (267) 27
    tLT (268) 46
    tGT (269) 47
    tNE (270) 48
    tEQ (271) 49
    tGE (272) 50
    tLE (273) 51
    tASSIGN (274) 23 31 36
    tAND (275) 52
    tOR (276) 53
    tNOT (277) 54
    tSEMI (278) 23 31 32 55 56
    tCOMMA (279) 15 34 36
    tLPAR (280) 4 6 39 41 55
    tRPAR (281) 4 6 39 41 55
    tLBRACE (282) 4 6 39 41 44
    tRBRACE (283) 4 6 39 41 44
    tERROR (284)
    tID <s> (285) 4 6 14 15 23 24 31 32 34 36 55
    tNB <nb> (286) 25
    tIF <nb> (287) 41


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Programme (34)
        on left: 1 2
        on right: 0 1
    Fonc (35)
        on left: 4 6
        on right: 1 2
    $@1 (36)
        on left: 3
        on right: 4
    $@2 (37)
        on left: 5
        on right: 6
    PushAdr (38)
        on left: 7
        on right: 4 6
    PushVal (39)
        on left: 8
        on right: 4
    IncrDepth (40)
        on left: 9
        on right: 4 6 39 41 44
    DecrDepth (41)
        on left: 10
        on right: 4 6 39 41 44
    Params (42)
        on left: 11 12 13
        on right: 4 6
    Param (43)
        on left: 14 15
        on right: 13 15
    Body (44)
        on left: 16 17
        on right: 4 6 17 39 41 44
    Instruction (45)
        on left: 18 19 20 21 22
        on right: 17
    Affectation (46)
        on left: 23
        on right: 18
    Expr <nb> (47)
        on left: 24 25 26 27 28 29
        on right: 23 26 27 28 29 31 36 45 46 47 48 49 50 51 52 53 54 56
    Declaration (48)
        on left: 31 32
        on right: 19
    $@3 (49)
        on left: 30
        on right: 31
    MultiDeclaration (50)
        on left: 33 34 36
        on right: 32 34 36
    $@4 (51)
        on left: 35
        on right: 36
    While <nb> (52)
        on left: 39
        on right: 20
    @5 (53)
        on left: 37
        on right: 39
    @6 (54)
        on left: 38
        on right: 39
    DebutIf <nb> (55)
        on left: 41
        on right: 42 44
    @7 (56)
        on left: 40
        on right: 41
    If (57)
        on left: 42 44
        on right: 21
    @8 (58)
        on left: 43
        on right: 44
    Cond <nb> (59)
        on left: 45 46 47 48 49 50 51 52 53 54
        on right: 39 41
    Print (60)
        on left: 55
        on right: 22
    Return (61)
        on left: 56
        on right: 4


State 0

    0 $accept: • Programme $end

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    Programme  go to state 3
    Fonc       go to state 4


State 1

    6 Fonc: tVOID • tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tID  shift, and go to state 5


State 2

    4 Fonc: tINT • tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tID  shift, and go to state 6


State 3

    0 $accept: Programme • $end

    $end  shift, and go to state 7


State 4

    1 Programme: Fonc • Programme
    2          | Fonc •

    tVOID  shift, and go to state 1
    tINT   shift, and go to state 2

    $default  reduce using rule 2 (Programme)

    Programme  go to state 8
    Fonc       go to state 4


State 5

    6 Fonc: tVOID tID • $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 5 ($@2)

    $@2  go to state 9


State 6

    4 Fonc: tINT tID • $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 3 ($@1)

    $@1  go to state 10


State 7

    0 $accept: Programme $end •

    $default  accept


State 8

    1 Programme: Fonc Programme •

    $default  reduce using rule 1 (Programme)


State 9

    6 Fonc: tVOID tID $@2 • IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 11


State 10

    4 Fonc: tINT tID $@1 • IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 12


State 11

    6 Fonc: tVOID tID $@2 IncrDepth • PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 7 (PushAdr)

    PushAdr  go to state 13


State 12

    4 Fonc: tINT tID $@1 IncrDepth • PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 7 (PushAdr)

    PushAdr  go to state 14


State 13

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr • tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tLPAR  shift, and go to state 15


State 14

    4 Fonc: tINT tID $@1 IncrDepth PushAdr • PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 8 (PushVal)

    PushVal  go to state 16


State 15

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR • Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tVOID  shift, and go to state 17
    tINT   shift, and go to state 18

    $default  reduce using rule 11 (Params)

    Params  go to state 19
    Param   go to state 20


State 16

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal • tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tLPAR  shift, and go to state 21


State 17

   12 Params: tVOID •

    $default  reduce using rule 12 (Params)


State 18

   14 Param: tINT • tID
   15      | tINT • tID tCOMMA Param

    tID  shift, and go to state 22


State 19

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params • tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tRPAR  shift, and go to state 23


State 20

   13 Params: Param •

    $default  reduce using rule 13 (Params)


State 21

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR • Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tVOID  shift, and go to state 17
    tINT   shift, and go to state 18

    $default  reduce using rule 11 (Params)

    Params  go to state 24
    Param   go to state 20


State 22

   14 Param: tINT tID •
   15      | tINT tID • tCOMMA Param

    tCOMMA  shift, and go to state 25

    $default  reduce using rule 14 (Param)


State 23

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR • tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth

    tLBRACE  shift, and go to state 26


State 24

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params • tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tRPAR  shift, and go to state 27


State 25

   15 Param: tINT tID tCOMMA • Param

    tINT  shift, and go to state 18

    Param  go to state 28


State 26

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE • IncrDepth Body DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 29


State 27

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR • tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    tLBRACE  shift, and go to state 30


State 28

   15 Param: tINT tID tCOMMA Param •

    $default  reduce using rule 15 (Param)


State 29

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth • Body DecrDepth tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 36
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 30

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE • IncrDepth Body Return DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 44


State 31

   31 Declaration: tINT • tID tASSIGN $@3 Expr tSEMI
   32            | tINT • tID MultiDeclaration tSEMI

    tID  shift, and go to state 45


State 32

   39 While: tWHILE • tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLPAR  shift, and go to state 46


State 33

   55 Print: tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 47


State 34

   23 Affectation: tID • tASSIGN Expr tSEMI

    tASSIGN  shift, and go to state 48


State 35

   41 DebutIf: tIF • tLPAR Cond tRPAR @7 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLPAR  shift, and go to state 49


State 36

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body • DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 50


State 37

   17 Body: Instruction • Body

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 51
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 38

   18 Instruction: Affectation •

    $default  reduce using rule 18 (Instruction)


State 39

   19 Instruction: Declaration •

    $default  reduce using rule 19 (Instruction)


State 40

   20 Instruction: While •

    $default  reduce using rule 20 (Instruction)


State 41

   42 If: DebutIf •
   44   | DebutIf • tELSE @8 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tELSE  shift, and go to state 52

    $default  reduce using rule 42 (If)


State 42

   21 Instruction: If •

    $default  reduce using rule 21 (Instruction)


State 43

   22 Instruction: Print •

    $default  reduce using rule 22 (Instruction)


State 44

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth • Body Return DecrDepth tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 53
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 45

   31 Declaration: tINT tID • tASSIGN $@3 Expr tSEMI
   32            | tINT tID • MultiDeclaration tSEMI

    tASSIGN  shift, and go to state 54
    tCOMMA   shift, and go to state 55

    $default  reduce using rule 33 (MultiDeclaration)

    MultiDeclaration  go to state 56


State 46

   39 While: tWHILE tLPAR • @5 Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 37 (@5)

    @5  go to state 57


State 47

   55 Print: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 58


State 48

   23 Affectation: tID tASSIGN • Expr tSEMI

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 61


State 49

   41 DebutIf: tIF tLPAR • Cond tRPAR @7 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tNOT  shift, and go to state 62
    tID   shift, and go to state 59
    tNB   shift, and go to state 60

    Expr  go to state 63
    Cond  go to state 64


State 50

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 65


State 51

   17 Body: Instruction Body •

    $default  reduce using rule 17 (Body)


State 52

   44 If: DebutIf tELSE • @8 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 43 (@8)

    @8  go to state 66


State 53

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body • Return DecrDepth tRBRACE DecrDepth

    tRETURN  shift, and go to state 67

    Return  go to state 68


State 54

   31 Declaration: tINT tID tASSIGN • $@3 Expr tSEMI

    $default  reduce using rule 30 ($@3)

    $@3  go to state 69


State 55

   34 MultiDeclaration: tCOMMA • tID MultiDeclaration
   36                 | tCOMMA • tID tASSIGN $@4 Expr MultiDeclaration

    tID  shift, and go to state 70


State 56

   32 Declaration: tINT tID MultiDeclaration • tSEMI

    tSEMI  shift, and go to state 71


State 57

   39 While: tWHILE tLPAR @5 • Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tNOT  shift, and go to state 62
    tID   shift, and go to state 59
    tNB   shift, and go to state 60

    Expr  go to state 63
    Cond  go to state 72


State 58

   55 Print: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 73


State 59

   24 Expr: tID •

    $default  reduce using rule 24 (Expr)


State 60

   25 Expr: tNB •

    $default  reduce using rule 25 (Expr)


State 61

   23 Affectation: tID tASSIGN Expr • tSEMI
   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr

    tADD   shift, and go to state 74
    tSUB   shift, and go to state 75
    tMUL   shift, and go to state 76
    tDIV   shift, and go to state 77
    tSEMI  shift, and go to state 78


State 62

   54 Cond: tNOT • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 79


State 63

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   45 Cond: Expr •
   46     | Expr • tLT Expr
   47     | Expr • tGT Expr
   48     | Expr • tNE Expr
   49     | Expr • tEQ Expr
   50     | Expr • tGE Expr
   51     | Expr • tLE Expr
   52     | Expr • tAND Expr
   53     | Expr • tOR Expr

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77
    tLT   shift, and go to state 80
    tGT   shift, and go to state 81
    tNE   shift, and go to state 82
    tEQ   shift, and go to state 83
    tGE   shift, and go to state 84
    tLE   shift, and go to state 85
    tAND  shift, and go to state 86
    tOR   shift, and go to state 87

    $default  reduce using rule 45 (Cond)


State 64

   41 DebutIf: tIF tLPAR Cond • tRPAR @7 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tRPAR  shift, and go to state 88


State 65

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE • DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 89


State 66

   44 If: DebutIf tELSE @8 • tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 90


State 67

   56 Return: tRETURN • Expr tSEMI

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 91


State 68

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return • DecrDepth tRBRACE DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 92


State 69

   31 Declaration: tINT tID tASSIGN $@3 • Expr tSEMI

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 93


State 70

   34 MultiDeclaration: tCOMMA tID • MultiDeclaration
   36                 | tCOMMA tID • tASSIGN $@4 Expr MultiDeclaration

    tASSIGN  shift, and go to state 94
    tCOMMA   shift, and go to state 55

    $default  reduce using rule 33 (MultiDeclaration)

    MultiDeclaration  go to state 95


State 71

   32 Declaration: tINT tID MultiDeclaration tSEMI •

    $default  reduce using rule 32 (Declaration)


State 72

   39 While: tWHILE tLPAR @5 Cond • tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    tRPAR  shift, and go to state 96


State 73

   55 Print: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 97


State 74

   28 Expr: Expr tADD • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 98


State 75

   29 Expr: Expr tSUB • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 99


State 76

   26 Expr: Expr tMUL • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 100


State 77

   27 Expr: Expr tDIV • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 101


State 78

   23 Affectation: tID tASSIGN Expr tSEMI •

    $default  reduce using rule 23 (Affectation)


State 79

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   54 Cond: tNOT Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 54 (Cond)


State 80

   46 Cond: Expr tLT • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 102


State 81

   47 Cond: Expr tGT • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 103


State 82

   48 Cond: Expr tNE • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 104


State 83

   49 Cond: Expr tEQ • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 105


State 84

   50 Cond: Expr tGE • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 106


State 85

   51 Cond: Expr tLE • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 107


State 86

   52 Cond: Expr tAND • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 108


State 87

   53 Cond: Expr tOR • Expr

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 109


State 88

   41 DebutIf: tIF tLPAR Cond tRPAR • @7 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 40 (@7)

    @7  go to state 110


State 89

    6 Fonc: tVOID tID $@2 IncrDepth PushAdr tLPAR Params tRPAR tLBRACE IncrDepth Body DecrDepth tRBRACE DecrDepth •

    $default  reduce using rule 6 (Fonc)


State 90

   44 If: DebutIf tELSE @8 tLBRACE • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 111


State 91

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   56 Return: tRETURN Expr • tSEMI

    tADD   shift, and go to state 74
    tSUB   shift, and go to state 75
    tMUL   shift, and go to state 76
    tDIV   shift, and go to state 77
    tSEMI  shift, and go to state 112


State 92

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 113


State 93

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   31 Declaration: tINT tID tASSIGN $@3 Expr • tSEMI

    tADD   shift, and go to state 74
    tSUB   shift, and go to state 75
    tMUL   shift, and go to state 76
    tDIV   shift, and go to state 77
    tSEMI  shift, and go to state 114


State 94

   36 MultiDeclaration: tCOMMA tID tASSIGN • $@4 Expr MultiDeclaration

    $default  reduce using rule 35 ($@4)

    $@4  go to state 115


State 95

   34 MultiDeclaration: tCOMMA tID MultiDeclaration •

    $default  reduce using rule 34 (MultiDeclaration)


State 96

   39 While: tWHILE tLPAR @5 Cond tRPAR • @6 tLBRACE IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 38 (@6)

    @6  go to state 116


State 97

   55 Print: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 55 (Print)


State 98

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   28     | Expr tADD Expr •
   29     | Expr • tSUB Expr

    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 28 (Expr)


State 99

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   29     | Expr tSUB Expr •

    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 29 (Expr)


State 100

   26 Expr: Expr • tMUL Expr
   26     | Expr tMUL Expr •
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr

    $default  reduce using rule 26 (Expr)


State 101

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   27     | Expr tDIV Expr •
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr

    $default  reduce using rule 27 (Expr)


State 102

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   46 Cond: Expr tLT Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 46 (Cond)


State 103

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   47 Cond: Expr tGT Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 47 (Cond)


State 104

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   48 Cond: Expr tNE Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 48 (Cond)


State 105

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   49 Cond: Expr tEQ Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 49 (Cond)


State 106

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   50 Cond: Expr tGE Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 50 (Cond)


State 107

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   51 Cond: Expr tLE Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 51 (Cond)


State 108

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   52 Cond: Expr tAND Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 52 (Cond)


State 109

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   53 Cond: Expr tOR Expr •

    tADD  shift, and go to state 74
    tSUB  shift, and go to state 75
    tMUL  shift, and go to state 76
    tDIV  shift, and go to state 77

    $default  reduce using rule 53 (Cond)


State 110

   41 DebutIf: tIF tLPAR Cond tRPAR @7 • tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 117


State 111

   44 If: DebutIf tELSE @8 tLBRACE IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 118
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 112

   56 Return: tRETURN Expr tSEMI •

    $default  reduce using rule 56 (Return)


State 113

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE • DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 119


State 114

   31 Declaration: tINT tID tASSIGN $@3 Expr tSEMI •

    $default  reduce using rule 31 (Declaration)


State 115

   36 MultiDeclaration: tCOMMA tID tASSIGN $@4 • Expr MultiDeclaration

    tID  shift, and go to state 59
    tNB  shift, and go to state 60

    Expr  go to state 120


State 116

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 • tLBRACE IncrDepth Body tRBRACE DecrDepth

    tLBRACE  shift, and go to state 121


State 117

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 122


State 118

   44 If: DebutIf tELSE @8 tLBRACE IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 123


State 119

    4 Fonc: tINT tID $@1 IncrDepth PushAdr PushVal tLPAR Params tRPAR tLBRACE IncrDepth Body Return DecrDepth tRBRACE DecrDepth •

    $default  reduce using rule 4 (Fonc)


State 120

   26 Expr: Expr • tMUL Expr
   27     | Expr • tDIV Expr
   28     | Expr • tADD Expr
   29     | Expr • tSUB Expr
   36 MultiDeclaration: tCOMMA tID tASSIGN $@4 Expr • MultiDeclaration

    tADD    shift, and go to state 74
    tSUB    shift, and go to state 75
    tMUL    shift, and go to state 76
    tDIV    shift, and go to state 77
    tCOMMA  shift, and go to state 55

    $default  reduce using rule 33 (MultiDeclaration)

    MultiDeclaration  go to state 124


State 121

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE • IncrDepth Body tRBRACE DecrDepth

    $default  reduce using rule 9 (IncrDepth)

    IncrDepth  go to state 125


State 122

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 126
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 123

   44 If: DebutIf tELSE @8 tLBRACE IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 127


State 124

   36 MultiDeclaration: tCOMMA tID tASSIGN $@4 Expr MultiDeclaration •

    $default  reduce using rule 36 (MultiDeclaration)


State 125

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth • Body tRBRACE DecrDepth

    tINT    shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 34
    tIF     shift, and go to state 35

    $default  reduce using rule 16 (Body)

    Body         go to state 128
    Instruction  go to state 37
    Affectation  go to state 38
    Declaration  go to state 39
    While        go to state 40
    DebutIf      go to state 41
    If           go to state 42
    Print        go to state 43


State 126

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 129


State 127

   44 If: DebutIf tELSE @8 tLBRACE IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 44 (If)


State 128

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth Body • tRBRACE DecrDepth

    tRBRACE  shift, and go to state 130


State 129

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 131


State 130

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE • DecrDepth

    $default  reduce using rule 10 (DecrDepth)

    DecrDepth  go to state 132


State 131

   41 DebutIf: tIF tLPAR Cond tRPAR @7 tLBRACE IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 41 (DebutIf)


State 132

   39 While: tWHILE tLPAR @5 Cond tRPAR @6 tLBRACE IncrDepth Body tRBRACE DecrDepth •

    $default  reduce using rule 39 (While)
